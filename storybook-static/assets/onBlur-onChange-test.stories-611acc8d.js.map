{"version":3,"file":"onBlur-onChange-test.stories-611acc8d.js","sources":["../../stories/sandbox/onBlur-onChange-test.stories.jsx"],"sourcesContent":["/* eslint-disable jsx-a11y/label-has-associated-control */\nimport { useCorn } from '@react-corn/core';\nimport { Quill } from '@react-corn/quill';\nimport { ButtonRow, Number, Select, Text } from '@react-corn/simple';\nimport Prism from 'prismjs';\nimport { memo, useState } from 'react';\nimport styled from 'styled-components';\nconst highlightJson = code => Prism.highlight(code, Prism.languages.json, 'json');\nconst initialItem = {\n  text: 'text',\n  int: 84,\n  html: '<p>H<strong>T</strong><u>M</u><em>L</em></p>',\n  select: Infinity\n};\nconst choices = {\n  one: 'I',\n  two: 'II',\n  three: 'III',\n  four: 'IV',\n  five: 'V'\n};\nconst List = styled.ul`\n  list-style: none;\n  overflow: auto;\n  max-height: 300px;\n`;\nconst ListItem = styled.li`\n  margin: 0.5em;\n  > div {\n    margin-left: 1em;\n    font-size: 13px;\n    font-family: 'Fira Code', monospace;\n  }\n`;\nconst Log = memo(function Log({\n  changes\n}) {\n  return <List>\n      {changes.slice().reverse().map(({\n      stamp,\n      type,\n      newItem,\n      errors\n    }) => <ListItem key={stamp.getTime()}>\n            <small>{stamp.toISOString().split('T')[1].replace('Z', '')}</small>{' '}\n            - <strong>{type}</strong>\n            {<div dangerouslySetInnerHTML={{\n        __html: '<i> item: </i>' + highlightJson(JSON.stringify(newItem))\n      }} />}\n            {<div dangerouslySetInnerHTML={{\n        __html: '<i> errors: </i>' + highlightJson(JSON.stringify(errors))\n      }} />}\n          </ListItem>)}\n    </List>;\n});\nconst inlineBlock = {\n  display: 'inline-block'\n};\nexport const OnChangeOnBlurTest = () => {\n  const [item, setItem] = useState(initialItem);\n  const [changes, setChanges] = useState([]);\n  const {\n    form,\n    field,\n    modified,\n    onReset\n  } = useCorn({\n    item,\n    onSubmit: newItem => {\n      const accepted = window.confirm(`You submitted \"${Object.values(newItem).join(', ')}\"`);\n      accepted && setItem(newItem);\n    },\n    onChange: (newItem, itemDiff, errors) => {\n      setChanges([...changes, {\n        stamp: new Date(),\n        type: 'change',\n        newItem,\n        itemDiff,\n        errors\n      }]);\n    },\n    onBlur: (newItem, itemDiff, errors) => {\n      setChanges([...changes, {\n        stamp: new Date(),\n        type: 'blur',\n        newItem,\n        itemDiff,\n        errors\n      }]);\n    }\n  });\n  return <>\n      <form {...form}>\n        <Text required {...field(`text`)}>\n          Text\n        </Text>\n        <Number required {...field(`int`)}>\n          Number\n        </Number>\n        <Quill style={inlineBlock} required {...field(`html`)}>\n          HTML\n        </Quill>\n        <Select required choices={choices} {...field(`select`)}>\n          Select\n        </Select>\n\n        <div style={{\n        width: '100%'\n      }} />\n        <ButtonRow>\n          <button disabled={!modified}>Submit</button>\n          <button type=\"button\" disabled={!modified} onClick={onReset}>\n            Reset\n          </button>\n        </ButtonRow>\n      </form>\n      <Log changes={changes} />\n    </>;\n};\nexport default {\n  title: 'Sandbox/onBlur-onChange-test',\n  parameters: {\n    options: {\n      showPanel: false\n    }\n  }\n};\nOnChangeOnBlurTest.parameters = {\n  ...OnChangeOnBlurTest.parameters,\n  docs: {\n    ...OnChangeOnBlurTest.parameters?.docs,\n    source: {\n      originalSource: \"() => {\\n  const [item, setItem] = useState(initialItem);\\n  const [changes, setChanges] = useState([]);\\n  const {\\n    form,\\n    field,\\n    modified,\\n    onReset\\n  } = useCorn({\\n    item,\\n    onSubmit: newItem => {\\n      const accepted = window.confirm(`You submitted \\\"${Object.values(newItem).join(', ')}\\\"`);\\n      accepted && setItem(newItem);\\n    },\\n    onChange: (newItem, itemDiff, errors) => {\\n      setChanges([...changes, {\\n        stamp: new Date(),\\n        type: 'change',\\n        newItem,\\n        itemDiff,\\n        errors\\n      }]);\\n    },\\n    onBlur: (newItem, itemDiff, errors) => {\\n      setChanges([...changes, {\\n        stamp: new Date(),\\n        type: 'blur',\\n        newItem,\\n        itemDiff,\\n        errors\\n      }]);\\n    }\\n  });\\n  return <>\\n      <form {...form}>\\n        <Text required {...field(`text`)}>\\n          Text\\n        </Text>\\n        <Number required {...field(`int`)}>\\n          Number\\n        </Number>\\n        <Quill style={inlineBlock} required {...field(`html`)}>\\n          HTML\\n        </Quill>\\n        <Select required choices={choices} {...field(`select`)}>\\n          Select\\n        </Select>\\n\\n        <div style={{\\n        width: '100%'\\n      }} />\\n        <ButtonRow>\\n          <button disabled={!modified}>Submit</button>\\n          <button type=\\\"button\\\" disabled={!modified} onClick={onReset}>\\n            Reset\\n          </button>\\n        </ButtonRow>\\n      </form>\\n      <Log changes={changes} />\\n    </>;\\n}\",\n      ...OnChangeOnBlurTest.parameters?.docs?.source\n    }\n  }\n};"],"names":["highlightJson","Prism","code","initialItem","choices","List","styled","ListItem","Log","memo","changes","jsx","stamp","type","newItem","errors","inlineBlock","OnChangeOnBlurTest","item","setItem","useState","setChanges","form","field","modified","onReset","useCorn","itemDiff","jsxs","Fragment","Text","Number","Quill","Select","ButtonRow","onBlurOnChangeTest_stories","_a","_c","_b"],"mappings":"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"}