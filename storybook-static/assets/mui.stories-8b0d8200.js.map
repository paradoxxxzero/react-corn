{"version":3,"file":"mui.stories-8b0d8200.js","sources":["../../stories/mui.stories.jsx"],"sourcesContent":["/* eslint-disable jsx-a11y/label-has-associated-control */\nimport { Chip, InputAdornment } from '@mui/material';\nimport { useCorn } from '@react-corn/core';\nimport { Autocomplete, Checkbox, Email, Inline, Money, Number, Password, Select, Slider, Text, TextArea } from '@react-corn/mui';\nimport { memo, useCallback } from 'react';\nimport { Button, Form } from './helpers/muiForm';\nimport { Story } from './helpers/Story';\nexport default {\n  title: '@react-corn/mui',\n  parameters: {\n    options: {\n      showPanel: true\n    }\n  }\n};\nconst continents = {\n  Africa: 'AF',\n  Antarctica: 'AN',\n  Asia: 'AS',\n  Europe: 'EU',\n  'North America': 'NA',\n  'Australia/Oceania': 'AU',\n  'South America': 'SA'\n};\nconst colors = {\n  White: '#ffffff',\n  Silver: '#c0c0c0',\n  Gray: '#808080',\n  Black: '#000000',\n  Red: '#ff0000',\n  Maroon: '#800000',\n  Yellow: '#ffff00',\n  Olive: '#808000',\n  Lime: '#00ff00',\n  Green: '#008000',\n  Aqua: '#00ffff',\n  Teal: '#008080',\n  Blue: '#0000ff',\n  Navy: '#000080',\n  Fuchsia: '#ff00ff',\n  Purple: '#800080'\n};\nconst CornForm = memo(({\n  item,\n  onItem,\n  onTransient,\n  onDelta,\n  onErrors\n}) => {\n  const handleChange = useCallback((transient, delta, errors) => {\n    onTransient(transient);\n    onErrors(errors);\n  }, [onErrors, onTransient]);\n  const handleSubmit = useCallback((item, delta) => {\n    onItem(item);\n    onDelta(delta);\n  }, [onDelta, onItem]);\n  const {\n    form,\n    field,\n    modified,\n    onReset\n  } = useCorn({\n    item,\n    onChange: handleChange,\n    onSubmit: handleSubmit\n  });\n  return <Form {...form}>\n      <Inline>\n        <Text required maxLength={25} {...field('name')}>\n          Name\n        </Text>\n        <Email disabled {...field('mail')}>\n          Mail\n        </Email>\n        <Password variant=\"filled\" {...field('password')}>\n          Mot de passe\n        </Password>\n      </Inline>\n      <Inline>\n        <Number style={{\n        width: '6ch'\n      }} {...field('address.number', {\n        InputProps: ({\n          address: {\n            number: num\n          }\n        }) => num ? {\n          endAdornment: <InputAdornment position=\"end\">\n                        {num > 20 || num < 10 ? {\n              1: 'st',\n              2: 'nd',\n              3: 'rd'\n            }[num % 10] || 'th' : 'th'}\n                      </InputAdornment>\n        } : undefined\n      })}>\n          Num\n        </Number>\n        <Text size={8} {...field('address.street')}>\n          Street name\n        </Text>\n      </Inline>\n      <Text {...field('address.city')}>City</Text>\n      <Text {...field('address.country')} InputLabelProps={{\n      shrink: true,\n      disableAnimation: true\n    }}>\n        Country\n      </Text>\n      <Slider min={12} max={100} valueLabelDisplay=\"auto\" {...field('age', v => v > 90 && 'You might be too old for that, sorry.')}>\n        Age\n      </Slider>\n      <Select choices={Object.keys(continents)}\n    // multiple\n    {...field('address.continent', continent => continent === 'Australia/Oceania' && 'Sorry but choose a closest continent')}>\n        Continent\n      </Select>\n      <Inline>\n        <TextArea {...field('message')}>Message</TextArea>\n        <Checkbox option=\"Away\" {...field('away')} required>\n          Status\n        </Checkbox>\n      </Inline>\n      <Inline>\n        <Money size=\"small\" InputProps={{\n        endAdornment: <InputAdornment position=\"end\">$</InputAdornment>\n      }} {...field('price')}>\n          Price\n        </Money>\n        <Checkbox noIndeterminate {...field('taxes')}>\n          Incl. taxes\n        </Checkbox>\n      </Inline>\n\n      <Button type=\"submit\" disabled={!modified} color=\"primary\" variant=\"contained\">\n        Submit\n      </Button>\n      <Button disabled={!modified} onClick={onReset}>\n        Reset\n      </Button>\n    </Form>;\n});\nconst getContrast = rgb => [299, 587, 114].reduce((s, k, i) => s + parseInt(rgb.substring(1 + i * 2, 1 + (i + 1) * 2), 16) * k) >= 2 ** 7 * 1000;\nconst AutocompleteCornForm = memo(({\n  item,\n  onItem,\n  onTransient,\n  onDelta,\n  onErrors\n}) => {\n  const handleChange = useCallback((transient, delta, errors) => {\n    onTransient(transient);\n    onErrors(errors);\n  }, [onErrors, onTransient]);\n  const handleSubmit = useCallback((item, delta, cleanItem) => {\n    onItem(cleanItem);\n    onDelta(delta);\n  }, [onDelta, onItem]);\n  const {\n    form,\n    field,\n    modified,\n    onReset\n  } = useCorn({\n    item,\n    onChange: handleChange,\n    onSubmit: handleSubmit\n  });\n  return <Form {...form}>\n        <Autocomplete choices={continents} {...field('continent')}>\n          Continent\n        </Autocomplete>\n        <Autocomplete required pattern=\"^.?U$\" width={400} choices={continents} {...field('continent-validation')}>\n          Continent with value ending with U validation\n        </Autocomplete>\n        <Autocomplete required multiple meta={colors} width={250} choices={Object.keys(colors)} renderOption={(props, option) => <li {...props}>\n              <span style={{\n        color: option.meta\n      }}>{option.title}</span>\n            </li>} {...field('colors')}>\n          Color label (custom style)\n        </Autocomplete>\n        <Autocomplete required multiple width={400} choices={colors} renderOption={(props, option) => <li {...props}>\n              <span style={{\n        color: option.value\n      }}>{option.title}</span>\n            </li>} renderTags={(value, getTagProps) => value.map((option, index) =>\n    // eslint-disable-next-line react/jsx-key\n    <Chip variant=\"outlined\" label={option.title} {...getTagProps({\n      index\n    })} style={{\n      color: getContrast(option.value) ? 'black' : 'white',\n      backgroundColor: option.value\n    }} />)} {...field('colors-value')}>\n          Color value (custom tag)\n        </Autocomplete>\n        <Inline>\n          <Autocomplete free choices={continents} {...field('free-continent')}>\n            Free Continent\n          </Autocomplete>\n          <Autocomplete free multiple choices={colors} {...field('free-colors')}>\n            Free Colors\n          </Autocomplete>\n        </Inline>\n        <Button type=\"submit\" disabled={!modified} color=\"primary\" variant=\"contained\">\n          Submit\n        </Button>\n        <Button onClick={onReset}>Reset</Button>\n      </Form>;\n});\nexport const MaterialUIDemoAutocomplete = () => {\n  return <Story Chapter={AutocompleteCornForm} initialItem={{\n    continent: 'EU',\n    'colors-value': ['#008080', '#800080', '#000000']\n  }} />;\n};\nexport const MaterialUIDemo = () => {\n  return <Story Chapter={CornForm} initialItem={{\n    name: 'John Foo',\n    mail: 'john.foo@example.com',\n    password: 'qwerty',\n    address: {\n      zipcode: 'Z4755A',\n      city: 'Barville',\n      continent: 'Europe'\n    },\n    age: 25,\n    message: 'Hello,\\nHow are you?',\n    price: '12.25'\n  }} />;\n};\nMaterialUIDemoAutocomplete.parameters = {\n  ...MaterialUIDemoAutocomplete.parameters,\n  docs: {\n    ...MaterialUIDemoAutocomplete.parameters?.docs,\n    source: {\n      originalSource: \"() => {\\n  return <Story Chapter={AutocompleteCornForm} initialItem={{\\n    continent: 'EU',\\n    'colors-value': ['#008080', '#800080', '#000000']\\n  }} />;\\n}\",\n      ...MaterialUIDemoAutocomplete.parameters?.docs?.source\n    }\n  }\n};\nMaterialUIDemo.parameters = {\n  ...MaterialUIDemo.parameters,\n  docs: {\n    ...MaterialUIDemo.parameters?.docs,\n    source: {\n      originalSource: \"() => {\\n  return <Story Chapter={CornForm} initialItem={{\\n    name: 'John Foo',\\n    mail: 'john.foo@example.com',\\n    password: 'qwerty',\\n    address: {\\n      zipcode: 'Z4755A',\\n      city: 'Barville',\\n      continent: 'Europe'\\n    },\\n    age: 25,\\n    message: 'Hello,\\\\nHow are you?',\\n    price: '12.25'\\n  }} />;\\n}\",\n      ...MaterialUIDemo.parameters?.docs?.source\n    }\n  }\n};"],"names":["mui_stories","continents","colors","CornForm","memo","item","onItem","onTransient","onDelta","onErrors","handleChange","useCallback","transient","delta","errors","handleSubmit","form","field","modified","onReset","useCorn","jsxs","Form","Inline","jsx","Text","Email","Password","Number","num","InputAdornment","Slider","v","Select","continent","TextArea","Checkbox","Money","Button","getContrast","rgb","s","k","i","AutocompleteCornForm","cleanItem","Autocomplete","props","option","value","getTagProps","index","Chip","MaterialUIDemoAutocomplete","Story","MaterialUIDemo","_a","_c","_b"],"mappings":"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"}