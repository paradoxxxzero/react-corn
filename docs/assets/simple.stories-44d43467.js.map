{"version":3,"file":"simple.stories-44d43467.js","sources":["../../stories/simple.stories.jsx"],"sourcesContent":["/* eslint-disable jsx-a11y/label-has-associated-control */\nimport { useCorn } from '@react-corn/core';\nimport { ButtonRow, Email, Inline, Money, Number, Password, Select, Text, TextArea } from '@react-corn/simple';\nimport { memo, useCallback } from 'react';\nimport { Story } from './helpers/Story';\nconst CornForm = memo(({\n  item,\n  onItem,\n  onTransient,\n  onDelta,\n  onErrors\n}) => {\n  const handleChange = useCallback((transient, delta, errors) => {\n    onTransient(transient);\n    onErrors(errors);\n  }, [onErrors, onTransient]);\n  const handleSubmit = useCallback((item, delta, cleanItem) => {\n    onItem(cleanItem);\n    onDelta(delta);\n  }, [onDelta, onItem]);\n  const {\n    form,\n    field,\n    modified,\n    onReset,\n    current\n  } = useCorn({\n    item,\n    onChange: handleChange,\n    onSubmit: handleSubmit\n  });\n  return <form {...form}>\n      <Inline>\n        <Text required maxLength={25} {...field('name')}>\n          Name\n        </Text>\n        <Email {...field('mail')}>Mail</Email>\n        <Password {...field('password')}>Mot de passe</Password>\n      </Inline>\n      <Inline>\n        <Text size={5} maxLength={5} {...field('address.zipcode')}>\n          Zip code\n        </Text>\n        <Text {...field('address.city', {\n        required: ({\n          address: {\n            zipcode\n          }\n        }) => !!zipcode\n      })}>\n          City\n        </Text>\n      </Inline>\n      {current(({\n      address\n    }) => address.zipcode || address.city) && <Select choices={['Africa', 'Antarctica', 'Asia', 'Europe', 'North America', 'Australia/Oceania', 'South America']}\n    // multiple\n    {...field('address.continent')}>\n          Continent\n        </Select>}\n      <Number min={12} {...field('age')}>\n        Age\n      </Number>\n      <TextArea {...field('message')}>Message</TextArea>\n      <Money {...field('price')}>Price</Money>\n\n      <ButtonRow>\n        <button disabled={!modified}>Submit</button>\n        <button type=\"button\" disabled={!modified} onClick={onReset}>\n          Reset\n        </button>\n      </ButtonRow>\n    </form>;\n});\nexport const SimpleUIDemo = () => {\n  return <Story Chapter={CornForm} initialItem={{\n    name: 'John Foo',\n    mail: 'john.foo@example.com',\n    password: 'qwerty',\n    address: {\n      zipcode: 'Z4755A',\n      city: 'Barville',\n      continent: null\n    },\n    age: 25,\n    message: 'Hello,\\nHow are you?',\n    price: '12.25'\n  }} />;\n};\nexport default {\n  title: '@react-corn/simple',\n  parameters: {\n    options: {\n      showPanel: true\n    }\n  }\n};\nSimpleUIDemo.parameters = {\n  ...SimpleUIDemo.parameters,\n  docs: {\n    ...SimpleUIDemo.parameters?.docs,\n    source: {\n      originalSource: \"() => {\\n  return <Story Chapter={CornForm} initialItem={{\\n    name: 'John Foo',\\n    mail: 'john.foo@example.com',\\n    password: 'qwerty',\\n    address: {\\n      zipcode: 'Z4755A',\\n      city: 'Barville',\\n      continent: null\\n    },\\n    age: 25,\\n    message: 'Hello,\\\\nHow are you?',\\n    price: '12.25'\\n  }} />;\\n}\",\n      ...SimpleUIDemo.parameters?.docs?.source\n    }\n  }\n};"],"names":["CornForm","memo","item","onItem","onTransient","onDelta","onErrors","handleChange","useCallback","transient","delta","errors","handleSubmit","cleanItem","form","field","modified","onReset","current","useCorn","jsxs","Inline","jsx","Text","Email","Password","zipcode","address","Select","Number","TextArea","Money","ButtonRow","SimpleUIDemo","Story","simple_stories","_a","_c","_b"],"mappings":"2aAKA,MAAAA,EAAAC,OAAA,CAAA,CACA,KAAAC,EACA,OAAAC,EACA,YAAAC,EACA,QAAAC,EACA,SAAAC,CACA,IAAA,CACA,MAAAC,EAAAC,EAAA,YAAA,CAAAC,EAAAC,EAAAC,IAAA,CACAP,EAAAK,CAAA,EACAH,EAAAK,CAAA,CAAA,EACA,CAAAL,EAAAF,CAAA,CAAA,EACAQ,EAAAJ,EAAA,YAAA,CAAAN,EAAAQ,EAAAG,IAAA,CACAV,EAAAU,CAAA,EACAR,EAAAK,CAAA,CAAA,EACA,CAAAL,EAAAF,CAAA,CAAA,EACA,CACA,KAAAW,EACA,MAAAC,EACA,SAAAC,EACA,QAAAC,EACA,QAAAC,GACAC,EAAA,CACA,KAAAjB,EACA,SAAAK,EACA,SAAAK,CAAA,CACA,EACA,OAAAQ,EAAA,OAAA,CAAA,GAAAN,EACA,SAAA,CAAAM,EAAAC,EACA,CAAA,SAAA,CAAAC,EAAAC,EAAA,CAAA,SAAA,GAAA,UAAA,GAAA,GAAAR,EAAA,MAAA,EAAA,SAEA,MAAA,CAAA,IACAS,EAAA,CAAA,GAAAT,EAAA,MAAA,EAAA,SAAA,OAAA,IACAU,EAAA,CAAA,GAAAV,EAAA,UAAA,EAAA,SAAA,eAAA,CAAA,EACA,IACAM,EACA,CAAA,SAAA,CAAAC,EAAAC,EAAA,CAAA,KAAA,EAAA,UAAA,EAAA,GAAAR,EAAA,iBAAA,EAAA,SAEA,UAAA,CAAA,EACAO,EAAAC,EAAA,CAAA,GAAAR,EAAA,eAAA,CACA,SAAA,CAAA,CACA,QAAA,CACA,QAAAW,CACA,CACA,IAAA,CAAA,CAAAA,CAAA,CACA,EAAA,SAEA,OAAA,CAAA,EACA,EACAR,EAAA,CAAA,CACA,QAAAS,CACA,IAAAA,EAAA,SAAAA,EAAA,IAAA,GAAAL,EAAAM,EAAA,CAAA,QAAA,CAAA,SAAA,aAAA,OAAA,SAAA,gBAAA,oBAAA,eAAA,EAEA,GAAAb,EAAA,mBAAA,EAAA,SAAA,WAAA,CAEA,EACAO,EAAAO,GAAA,IAAA,GAAA,GAAAd,EAAA,KAAA,EAAA,SAEA,MAAA,IACAe,EAAA,CAAA,GAAAf,EAAA,SAAA,EAAA,SAAA,UAAA,IACAgB,EAAA,CAAA,GAAAhB,EAAA,OAAA,EAAA,SAAA,QAAA,IAEAiB,EACA,CAAA,SAAA,CAAAV,EAAA,SAAA,CAAA,SAAA,CAAAN,EAAA,SAAA,SAAA,EACAM,EAAA,UAAA,KAAA,SAAA,SAAA,CAAAN,EAAA,QAAAC,EAAA,SAEA,OAAA,CAAA,CAAA,EACA,CACA,CAAA,CAAA,CACA,CAAA,EACAgB,EAAA,IACAX,EAAAY,EAAA,CAAA,QAAAlC,EAAA,YAAA,CACA,KAAA,WACA,KAAA,uBACA,SAAA,SACA,QAAA,CACA,QAAA,SACA,KAAA,WACA,UAAA,IACA,EACA,IAAA,GACA,QAAA;AAAA,cACA,MAAA,OACA,CAAA,CAAA,EAEAmC,EAAA,CACA,MAAA,qBACA,WAAA,CACA,QAAA,CACA,UAAA,EACA,CACA,CACA,YACAF,EAAA,WAAA,CACA,GAAAA,EAAA,WACA,KAAA,CACA,IAAAG,EAAAH,EAAA,aAAA,YAAAG,EAAA,KACA,OAAA,CACA,eAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACA,IAAAC,GAAAC,EAAAL,EAAA,aAAA,YAAAK,EAAA,OAAA,YAAAD,EAAA,MACA,CACA,CACA,EAAAJ,EAAA,aAAA,CAAA,YAAA,GAAA,QAAA,GAAA,YAAA"}