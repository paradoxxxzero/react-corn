{"version":3,"file":"dynamic-props.stories-5dfd0669.js","sources":["../../stories/overview/dynamic-props.stories.jsx"],"sourcesContent":["/* eslint-disable jsx-a11y/label-has-associated-control */\nimport { useCorn } from '@react-corn/core';\nimport { ButtonRow, Select, Text } from '@react-corn/simple';\nimport { memo, useCallback } from 'react';\nimport { Story } from '../helpers/Story';\nexport default {\n  title: 'Overview/dynamic-props',\n  parameters: {\n    options: {\n      showPanel: true\n    }\n  }\n};\nconst CornForm = memo(({\n  item,\n  onItem,\n  onTransient,\n  onDelta,\n  onErrors\n}) => {\n  const handleChange = useCallback((transient, delta, errors) => {\n    onTransient(transient);\n    onErrors(errors);\n  }, [onErrors, onTransient]);\n  const handleSubmit = useCallback((item, delta) => {\n    onItem(item);\n    onDelta(delta);\n  }, [onDelta, onItem]);\n  const {\n    form,\n    field,\n    modified,\n    onReset\n  } = useCorn({\n    item,\n    onChange: handleChange,\n    onSubmit: handleSubmit\n  });\n  const choices = Object.entries(item).filter(([k]) => k.startsWith('choice'));\n  return <form {...form}>\n      {choices.map(([k]) => <Text key={k} required {...field(k)}>\n          {k}\n        </Text>)}\n      <Text {...field(`choice${choices.length + 1}`)}>New choice</Text>\n      <Select {...field('dynamic-select', {\n      choices: currentItem => Object.entries(currentItem).filter(([k]) => k.startsWith('choice')).map(([k, v]) => [v, k])\n    })}>\n        Dynamic select\n      </Select>\n      <ButtonRow>\n        <button disabled={!modified}>Submit</button>\n        <button type=\"button\" disabled={!modified} onClick={onReset}>\n          Reset\n        </button>\n      </ButtonRow>\n    </form>;\n});\nexport const CornStory = () => {\n  return <Story Chapter={CornForm} initialItem={{\n    choice1: 'One',\n    choice2: 'Two'\n  }} />;\n};\nCornStory.parameters = {\n  ...CornStory.parameters,\n  docs: {\n    ...CornStory.parameters?.docs,\n    source: {\n      originalSource: \"() => {\\n  return <Story Chapter={CornForm} initialItem={{\\n    choice1: 'One',\\n    choice2: 'Two'\\n  }} />;\\n}\",\n      ...CornStory.parameters?.docs?.source\n    }\n  }\n};"],"names":["dynamicProps_stories","CornForm","memo","item","onItem","onTransient","onDelta","onErrors","handleChange","useCallback","transient","delta","errors","handleSubmit","form","field","modified","onReset","useCorn","choices","k","jsxs","jsx","Text","Select","currentItem","v","ButtonRow","CornStory","Story","_a","_c","_b"],"mappings":"iYAKA,MAAAA,EAAA,CACA,MAAA,yBACA,WAAA,CACA,QAAA,CACA,UAAA,EACA,CACA,CACA,EACAC,EAAAC,OAAA,CAAA,CACA,KAAAC,EACA,OAAAC,EACA,YAAAC,EACA,QAAAC,EACA,SAAAC,CACA,IAAA,CACA,MAAAC,EAAAC,EAAA,YAAA,CAAAC,EAAAC,EAAAC,IAAA,CACAP,EAAAK,CAAA,EACAH,EAAAK,CAAA,CAAA,EACA,CAAAL,EAAAF,CAAA,CAAA,EACAQ,EAAAJ,EAAAA,YAAA,CAAAN,EAAAQ,IAAA,CACAP,EAAAD,CAAA,EACAG,EAAAK,CAAA,CAAA,EACA,CAAAL,EAAAF,CAAA,CAAA,EACA,CACA,KAAAU,EACA,MAAAC,EACA,SAAAC,EACA,QAAAC,GACAC,EAAA,CACA,KAAAf,EACA,SAAAK,EACA,SAAAK,CAAA,CACA,EACAM,EAAA,OAAA,QAAAhB,CAAA,EAAA,OAAA,CAAA,CAAAiB,CAAA,IAAAA,EAAA,WAAA,QAAA,CAAA,EACA,OAAAC,EAAA,OAAA,CAAA,GAAAP,EACA,SAAA,CAAAK,EAAA,IAAA,CAAA,CAAAC,CAAA,IAAAE,EAAAC,EAAA,CAAA,SAAA,GAAA,GAAAR,EAAAK,CAAA,EACA,SAAAA,CAAA,EADAA,CAEA,CAAA,EACAE,EAAAC,GAAA,GAAAR,EAAA,SAAAI,EAAA,OAAA,GAAA,EAAA,SAAA,YAAA,CAAA,EACAG,EAAAE,EAAA,CAAA,GAAAT,EAAA,iBAAA,CACA,QAAAU,GAAA,OAAA,QAAAA,CAAA,EAAA,OAAA,CAAA,CAAAL,CAAA,IAAAA,EAAA,WAAA,QAAA,CAAA,EAAA,IAAA,CAAA,CAAAA,EAAAM,CAAA,IAAA,CAAAA,EAAAN,CAAA,CAAA,CAAA,CACA,EAAA,SAEA,iBAAA,IACAO,EACA,CAAA,SAAA,CAAAL,EAAA,SAAA,CAAA,SAAA,CAAAN,EAAA,SAAA,SAAA,EACAM,EAAA,UAAA,KAAA,SAAA,SAAA,CAAAN,EAAA,QAAAC,EAAA,SAEA,OAAA,CAAA,CAAA,EACA,CACA,CAAA,CAAA,CACA,CAAA,EACAW,EAAA,IACAN,EAAAO,EAAA,CAAA,QAAA5B,EAAA,YAAA,CACA,QAAA,MACA,QAAA,KACA,CAAA,CAAA,YAEA2B,EAAA,WAAA,CACA,GAAAA,EAAA,WACA,KAAA,CACA,IAAAE,EAAAF,EAAA,aAAA,YAAAE,EAAA,KACA,OAAA,CACA,eAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACA,IAAAC,GAAAC,EAAAJ,EAAA,aAAA,YAAAI,EAAA,OAAA,YAAAD,EAAA,MACA,CACA,CACA,EAAAH,EAAA,aAAA,CAAA,YAAA,GAAA,QAAA,GAAA,YAAA"}