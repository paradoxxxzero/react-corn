{"version":3,"file":"item-less-dual-corn.stories-f7c262a9.js","sources":["../../stories/sandbox/item-less-dual-corn.stories.jsx"],"sourcesContent":["/* eslint-disable jsx-a11y/label-has-associated-control */\nimport { useCorn } from '@react-corn/core';\nimport { ButtonRow, Date, Text } from '@react-corn/simple';\nimport { useState } from 'react';\nimport styled from 'styled-components';\nconst Spinner = styled.div`\n  pointer-events: none;\n  margin: 1.25em 0 0 1.25em;\n  width: 2em;\n  height: 2em;\n  border: 0.4em solid transparent;\n  border-color: rgba(0, 0, 0, 0.15);\n  border-top-color: rgba(0, 0, 0, 0.95);\n  border-radius: 100%;\n  animation: spin 1s linear infinite;\n  @keyframes spin {\n    100% {\n      transform: rotate(360deg);\n    }\n  }\n`;\nexport const ItemLessDualCorn = () => {\n  const [loading, setLoading] = useState(false);\n  const corn1 = useCorn({\n    onSubmit: item => {\n      return window.confirm(`You submitted in form 1 \"${Object.values(item).join(', ')}\"`);\n    }\n  });\n  const corn2 = useCorn({\n    onSubmit: async item => {\n      let result = window.confirm(`You submitted in form 2 \"${Object.values(item).join(', ')}\"`);\n      setLoading(true);\n      await new Promise(resolve => setTimeout(() => resolve(), 5000));\n      setLoading(false);\n      return result;\n    }\n  });\n  const extraProps = {\n    disabled: loading\n  };\n  return <div>\n      <h1>Form 1</h1>\n      <form {...corn1.form} style={{\n      display: 'flex',\n      flexWrap: 'wrap'\n    }}>\n        <Text required {...corn1.field(`text`)}>\n          Text\n        </Text>\n        <Date {...corn1.field(`date`)}>Date (not working)</Date>\n        <div style={{\n        width: '100%'\n      }} />\n        <ButtonRow>\n          <button disabled={!corn1.modified}>Submit</button>\n          <button type=\"button\" disabled={!corn1.modified} onClick={corn1.onReset}>\n            Reset\n          </button>\n        </ButtonRow>\n      </form>\n      <h1>Form 2</h1>\n      <h4>With a simulated loading of 5s</h4>\n      <form {...corn2.form} style={{\n      display: 'flex',\n      flexWrap: 'wrap',\n      alignItems: 'center'\n    }}>\n        <Text required {...corn2.field(`text`, extraProps)}>\n          Text\n        </Text>\n        <Date {...corn2.field(`date`, extraProps)}>Date (not working)</Date>\n        {loading && <Spinner />}\n        <div style={{\n        width: '100%'\n      }} />\n        <ButtonRow>\n          <button disabled={!corn2.modified}>Submit</button>\n          <button type=\"button\" disabled={!corn2.modified} onClick={corn2.onReset}>\n            Reset\n          </button>\n        </ButtonRow>\n      </form>\n    </div>;\n};\nexport default {\n  title: 'Sandbox/item-less-dual-corn',\n  parameters: {\n    options: {\n      showPanel: true\n    }\n  }\n};\nItemLessDualCorn.parameters = {\n  ...ItemLessDualCorn.parameters,\n  docs: {\n    ...ItemLessDualCorn.parameters?.docs,\n    source: {\n      originalSource: \"() => {\\n  const [loading, setLoading] = useState(false);\\n  const corn1 = useCorn({\\n    onSubmit: item => {\\n      return window.confirm(`You submitted in form 1 \\\"${Object.values(item).join(', ')}\\\"`);\\n    }\\n  });\\n  const corn2 = useCorn({\\n    onSubmit: async item => {\\n      let result = window.confirm(`You submitted in form 2 \\\"${Object.values(item).join(', ')}\\\"`);\\n      setLoading(true);\\n      await new Promise(resolve => setTimeout(() => resolve(), 5000));\\n      setLoading(false);\\n      return result;\\n    }\\n  });\\n  const extraProps = {\\n    disabled: loading\\n  };\\n  return <div>\\n      <h1>Form 1</h1>\\n      <form {...corn1.form} style={{\\n      display: 'flex',\\n      flexWrap: 'wrap'\\n    }}>\\n        <Text required {...corn1.field(`text`)}>\\n          Text\\n        </Text>\\n        <Date {...corn1.field(`date`)}>Date (not working)</Date>\\n        <div style={{\\n        width: '100%'\\n      }} />\\n        <ButtonRow>\\n          <button disabled={!corn1.modified}>Submit</button>\\n          <button type=\\\"button\\\" disabled={!corn1.modified} onClick={corn1.onReset}>\\n            Reset\\n          </button>\\n        </ButtonRow>\\n      </form>\\n      <h1>Form 2</h1>\\n      <h4>With a simulated loading of 5s</h4>\\n      <form {...corn2.form} style={{\\n      display: 'flex',\\n      flexWrap: 'wrap',\\n      alignItems: 'center'\\n    }}>\\n        <Text required {...corn2.field(`text`, extraProps)}>\\n          Text\\n        </Text>\\n        <Date {...corn2.field(`date`, extraProps)}>Date (not working)</Date>\\n        {loading && <Spinner />}\\n        <div style={{\\n        width: '100%'\\n      }} />\\n        <ButtonRow>\\n          <button disabled={!corn2.modified}>Submit</button>\\n          <button type=\\\"button\\\" disabled={!corn2.modified} onClick={corn2.onReset}>\\n            Reset\\n          </button>\\n        </ButtonRow>\\n      </form>\\n    </div>;\\n}\",\n      ...ItemLessDualCorn.parameters?.docs?.source\n    }\n  }\n};"],"names":["Spinner","styled","ItemLessDualCorn","loading","setLoading","useState","corn1","useCorn","item","corn2","result","resolve","extraProps","jsx","jsxs","Text","Date","ButtonRow","itemLessDualCorn_stories","_a","_c","_b"],"mappings":"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"}