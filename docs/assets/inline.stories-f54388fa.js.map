{"version":3,"file":"inline.stories-f54388fa.js","sources":["../../stories/sandbox/inline.stories.jsx"],"sourcesContent":["/* eslint-disable jsx-a11y/label-has-associated-control */\nimport { AdapterDateFns } from '@mui/x-date-pickers/AdapterDateFns';\nimport { LocalizationProvider } from '@mui/x-date-pickers/LocalizationProvider';\nimport { useCorn } from '@react-corn/core';\nimport { Inline as MuiInline } from '@react-corn/mui';\nimport { ButtonRow, Inline } from '@react-corn/simple';\nimport styled from 'styled-components';\nimport { mui, simple } from '../helpers/fields';\nexport default {\n  title: 'Sandbox/inline',\n  parameters: {\n    options: {\n      showPanel: true\n    }\n  }\n};\nconst Form = styled.form`\n  display: flex;\n  flex-wrap: wrap;\n`;\nconst SimpleForm = styled.div``;\nconst MaterialUIForm = styled.div`\n  .MuiFormControl-root {\n    display: block;\n    margin: 1em;\n  }\n`;\nconst choices = {\n  Red: '#ff0000',\n  Yellow: '#ffff00',\n  Olive: '#808000',\n  Lime: '#00ff00',\n  Green: '#008000',\n  Aqua: '#00ffff',\n  Teal: '#008080',\n  Blue: '#0000ff',\n  Navy: '#000080',\n  Fuchsia: '#ff00ff',\n  Purple: '#800080'\n};\nconst product = (...a) => a.reduce((a, b) => a.flatMap(d => b.map(e => [d, e].flat())));\nconst item = {};\nconst CornForm = () => {\n  const {\n    form,\n    field,\n    modified,\n    onReset\n  } = useCorn({\n    item\n  });\n  return <Form {...form}>\n      <SimpleForm>\n        <h1>Simple</h1>\n        {product(Object.entries(simple), Object.entries(simple)).filter(([k1,, k2]) => k1 !== k2).map(([key1, Field1, key2, Field2]) => <Inline key={`${key1}--${key2}`}>\n              <Field1 key={`simple.${key1}-of-${key1}--${key2}`} choices={key1 === 'select' ? choices : undefined} {...field(`simple.${key1}-of-${key1}--${key2}`)}>\n                {key1}\n              </Field1>\n              <Field2 key={`simple.${key2}-of-${key1}--${key2}`} choices={key2 === 'select' ? choices : undefined} {...field(`simple.${key2}-of-${key1}--${key2}`)}>\n                {key2}\n              </Field2>\n            </Inline>)}\n      </SimpleForm>\n      <MaterialUIForm>\n        <h1>MaterialUI</h1>\n        {product(Object.entries(mui), Object.entries(mui)).filter(([k1,, k2]) => k1 !== k2).map(([key1, Field1, key2, Field2]) => <MuiInline key={`${key1}--${key2}`}>\n              <Field1 key={`mui.${key1}-of-${key1}--${key2}`} choices={key1 === 'select' ? choices : undefined} {...field(`mui.${key1}-of-${key1}--${key2}`)}>\n                {key1}\n              </Field1>\n              <Field2 key={`mui.${key2}-of-${key1}--${key2}`} choices={key2 === 'select' ? choices : undefined} {...field(`mui.${key2}-of-${key1}--${key2}`)}>\n                {key2}\n              </Field2>\n            </MuiInline>)}\n      </MaterialUIForm>\n\n      <ButtonRow>\n        <button disabled={!modified}>Submit</button>\n        <button type=\"button\" disabled={!modified} onClick={onReset}>\n          Reset\n        </button>\n      </ButtonRow>\n    </Form>;\n};\nexport const CornStory = () => {\n  return <LocalizationProvider dateAdapter={AdapterDateFns}>\n      <CornForm />\n    </LocalizationProvider>;\n};\nCornStory.parameters = {\n  ...CornStory.parameters,\n  docs: {\n    ...CornStory.parameters?.docs,\n    source: {\n      originalSource: \"() => {\\n  return <LocalizationProvider dateAdapter={AdapterDateFns}>\\n      <CornForm />\\n    </LocalizationProvider>;\\n}\",\n      ...CornStory.parameters?.docs?.source\n    }\n  }\n};"],"names":["inline_stories","Form","styled","SimpleForm","MaterialUIForm","choices","product","a","b","d","e","item","CornForm","form","field","modified","onReset","useCorn","jsxs","jsx","simple","k1","k2","key1","Field1","key2","Field2","Inline","mui","MuiInline","ButtonRow","CornStory","LocalizationProvider","AdapterDateFns","_a","_c","_b"],"mappings":"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"}