{"version":3,"file":"dynamic-props.stories-fc79f761.js","sources":["../../stories/overview/dynamic-props.stories.jsx"],"sourcesContent":["/* eslint-disable jsx-a11y/label-has-associated-control */\nimport { useCorn } from '@react-corn/core';\nimport { ButtonRow, Select, Text } from '@react-corn/simple';\nimport { memo, useCallback } from 'react';\nimport { Story } from '../helpers/Story';\nexport default {\n  title: 'Overview/dynamic-props',\n  parameters: {\n    options: {\n      showPanel: true\n    }\n  }\n};\nconst CornForm = memo(({\n  item,\n  onItem,\n  onTransient,\n  onDelta,\n  onErrors\n}) => {\n  const handleChange = useCallback((transient, delta, errors) => {\n    onTransient(transient);\n    onErrors(errors);\n  }, [onErrors, onTransient]);\n  const handleSubmit = useCallback((item, delta) => {\n    onItem(item);\n    onDelta(delta);\n  }, [onDelta, onItem]);\n  const {\n    form,\n    field,\n    modified,\n    onReset\n  } = useCorn({\n    item,\n    onChange: handleChange,\n    onSubmit: handleSubmit\n  });\n  const choices = Object.entries(item).filter(([k]) => k.startsWith('choice'));\n  return <form {...form}>\n      {choices.map(([k]) => <Text key={k} required {...field(k)}>\n          {k}\n        </Text>)}\n      <Text {...field(`choice${choices.length + 1}`)}>New choice</Text>\n      <Select {...field('dynamic-select', {\n      choices: currentItem => Object.entries(currentItem).filter(([k]) => k.startsWith('choice')).map(([k, v]) => [v, k])\n    })}>\n        Dynamic select\n      </Select>\n      <ButtonRow>\n        <button disabled={!modified}>Submit</button>\n        <button type=\"button\" disabled={!modified} onClick={onReset}>\n          Reset\n        </button>\n      </ButtonRow>\n    </form>;\n});\nexport const CornStory = () => {\n  return <Story Chapter={CornForm} initialItem={{\n    choice1: 'One',\n    choice2: 'Two'\n  }} />;\n};\nCornStory.parameters = {\n  ...CornStory.parameters,\n  docs: {\n    ...CornStory.parameters?.docs,\n    source: {\n      originalSource: \"() => {\\n  return <Story Chapter={CornForm} initialItem={{\\n    choice1: 'One',\\n    choice2: 'Two'\\n  }} />;\\n}\",\n      ...CornStory.parameters?.docs?.source\n    }\n  }\n};"],"names":["dynamicProps_stories","CornForm","memo","item","onItem","onTransient","onDelta","onErrors","handleChange","useCallback","transient","delta","errors","handleSubmit","form","field","modified","onReset","useCorn","choices","k","jsxs","jsx","Text","Select","currentItem","v","ButtonRow","CornStory","Story","_a","_c","_b"],"mappings":"6XAKA,MAAeA,EAAA,CACb,MAAO,yBACP,WAAY,CACV,QAAS,CACP,UAAW,EACb,CACF,CACF,EACMC,EAAWC,OAAK,CAAC,CACrB,KAAAC,EACA,OAAAC,EACA,YAAAC,EACA,QAAAC,EACA,SAAAC,CACF,IAAM,CACJ,MAAMC,EAAeC,EAAA,YAAY,CAACC,EAAWC,EAAOC,IAAW,CAC7DP,EAAYK,CAAS,EACrBH,EAASK,CAAM,CAAA,EACd,CAACL,EAAUF,CAAW,CAAC,EACpBQ,EAAeJ,EAAAA,YAAY,CAACN,EAAMQ,IAAU,CAChDP,EAAOD,CAAI,EACXG,EAAQK,CAAK,CAAA,EACZ,CAACL,EAASF,CAAM,CAAC,EACd,CACJ,KAAAU,EACA,MAAAC,EACA,SAAAC,EACA,QAAAC,GACEC,EAAQ,CACV,KAAAf,EACA,SAAUK,EACV,SAAUK,CAAA,CACX,EACKM,EAAU,OAAO,QAAQhB,CAAI,EAAE,OAAO,CAAC,CAACiB,CAAC,IAAMA,EAAE,WAAW,QAAQ,CAAC,EACpE,OAAAC,EAAC,OAAM,CAAA,GAAGP,EACZ,SAAA,CAAAK,EAAQ,IAAI,CAAC,CAACC,CAAC,IAAOE,EAAAC,EAAA,CAAa,SAAQ,GAAE,GAAGR,EAAMK,CAAC,EACnD,SAAAA,CAAA,EAD4BA,CAE/B,CAAO,EACTE,EAACC,GAAM,GAAGR,EAAM,SAASI,EAAQ,OAAS,GAAG,EAAG,SAAU,YAAA,CAAA,EACzDG,EAAAE,EAAA,CAAQ,GAAGT,EAAM,iBAAkB,CACpC,QAAwBU,GAAA,OAAO,QAAQA,CAAW,EAAE,OAAO,CAAC,CAACL,CAAC,IAAMA,EAAE,WAAW,QAAQ,CAAC,EAAE,IAAI,CAAC,CAACA,EAAGM,CAAC,IAAM,CAACA,EAAGN,CAAC,CAAC,CAAA,CACnH,EAAG,SAEF,iBAAA,IACCO,EACC,CAAA,SAAA,CAAAL,EAAC,SAAO,CAAA,SAAU,CAACN,EAAU,SAAM,SAAA,EACnCM,EAAC,UAAO,KAAK,SAAS,SAAU,CAACN,EAAU,QAASC,EAAS,SAE7D,OAAA,CAAA,CAAA,EACF,CACF,CAAA,CAAA,CACJ,CAAC,EACYW,EAAY,IACfN,EAAAO,EAAA,CAAM,QAAS5B,EAAU,YAAa,CAC5C,QAAS,MACT,QAAS,KACR,CAAA,CAAA,YAEL2B,EAAU,WAAa,CACrB,GAAGA,EAAU,WACb,KAAM,CACJ,IAAGE,EAAAF,EAAU,aAAV,YAAAE,EAAsB,KACzB,OAAQ,CACN,eAAgB;AAAA;AAAA;AAAA;AAAA;AAAA,GAChB,IAAGC,GAAAC,EAAAJ,EAAU,aAAV,YAAAI,EAAsB,OAAtB,YAAAD,EAA4B,MACjC,CACF,CACF"}