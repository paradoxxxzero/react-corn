{"version":3,"file":"quill.stories-6e8daa6d.js","sources":["../../stories/quill.stories.jsx"],"sourcesContent":["/* eslint-disable jsx-a11y/label-has-associated-control */\nimport { useCorn } from '@react-corn/core';\nimport { Quill } from '@react-corn/quill';\nimport { ButtonRow, TextArea } from '@react-corn/simple';\nimport { memo, useCallback } from 'react';\nimport 'react-quill/dist/quill.snow.css';\nimport styled from 'styled-components';\nimport { Divider, Story } from './helpers/Story';\nconst modules = {\n  toolbar: [[{\n    header: [1, 2, false]\n  }], ['bold', 'italic', 'underline', 'strike', 'blockquote'], [{\n    list: 'ordered'\n  }, {\n    list: 'bullet'\n  }, {\n    indent: '-1'\n  }, {\n    indent: '+1'\n  }], ['link', 'image'], ['clean']]\n};\nconst formats = ['header', 'bold', 'italic', 'underline', 'strike', 'blockquote', 'list', 'bullet', 'indent', 'link', 'image'];\nconst Preview = styled.div`\n  max-width: 30%;\n  margin: 1em;\n`;\nconst maxSize = html => html.length > 250 ? 'This field must be shorter than 250 characters html tags included ' + `(${html.length - 250} extraneous chars).` : '';\nconst CornForm = memo(({\n  item,\n  onItem,\n  onTransient,\n  onDelta,\n  onErrors\n}) => {\n  const handleChange = useCallback((transient, delta, errors) => {\n    onTransient(transient);\n    onErrors(errors);\n  }, [onErrors, onTransient]);\n  const handleSubmit = useCallback((item, delta, cleanItem) => {\n    onItem(cleanItem);\n    onDelta(delta);\n  }, [onDelta, onItem]);\n  const {\n    form,\n    field,\n    modified,\n    onReset\n  } = useCorn({\n    item,\n    onChange: handleChange,\n    onSubmit: handleSubmit\n  });\n  return <>\n      <form {...form}>\n        <Quill required {...field('html', maxSize)}>\n          Html\n        </Quill>\n        <TextArea required {...field('html', maxSize)}>\n          Raw html\n        </TextArea>\n\n        <Quill modules={modules} formats={formats} {...field('other-html')}>\n          Custom Quill modules and formats\n        </Quill>\n\n        <ButtonRow>\n          <button disabled={!modified}>Submit</button>\n          <button type=\"button\" disabled={!modified} onClick={onReset}>\n            Reset\n          </button>\n        </ButtonRow>\n      </form>\n      <Divider />\n      <Preview>\n        <h1>Generated html:</h1>\n        <div dangerouslySetInnerHTML={{\n        __html: field('html').value\n      }} />\n      </Preview>\n    </>;\n});\nexport const QuillDemo = () => {\n  return <Story Chapter={CornForm} initialItem={{\n    html: '<h1>HTML Sample</h1><p><br></p><p>Hereâ€™s a simple html text in the quill editor.</p><p><br></p><p>react-corn handles simple field validation (this field has <strong>required</strong> and <em>a custom 250 characters </em>validator).</p>'\n  }} />;\n};\nexport default {\n  title: '@react-corn/quill',\n  parameters: {\n    options: {\n      showPanel: true\n    }\n  }\n};\nQuillDemo.parameters = {\n  ...QuillDemo.parameters,\n  docs: {\n    ...QuillDemo.parameters?.docs,\n    source: {\n      originalSource: \"() => {\\n  return <Story Chapter={CornForm} initialItem={{\\n    html: '<h1>HTML Sample</h1><p><br></p><p>Here\\u2019s a simple html text in the quill editor.</p><p><br></p><p>react-corn handles simple field validation (this field has <strong>required</strong> and <em>a custom 250 characters </em>validator).</p>'\\n  }} />;\\n}\",\n      ...QuillDemo.parameters?.docs?.source\n    }\n  }\n};"],"names":["modules","formats","Preview","styled","maxSize","html","CornForm","memo","item","onItem","onTransient","onDelta","onErrors","handleChange","useCallback","transient","delta","errors","handleSubmit","cleanItem","form","field","modified","onReset","useCorn","jsxs","Fragment","jsx","Quill","TextArea","ButtonRow","Divider","QuillDemo","Story","quill_stories","_a","_c","_b"],"mappings":"imBAQA,MAAAA,EAAA,CACA,QAAA,CAAA,CAAA,CACA,OAAA,CAAA,EAAA,EAAA,EAAA,CAAA,CACA,EAAA,CAAA,OAAA,SAAA,YAAA,SAAA,YAAA,EAAA,CAAA,CACA,KAAA,SAAA,EACA,CACA,KAAA,QAAA,EACA,CACA,OAAA,IAAA,EACA,CACA,OAAA,IACA,CAAA,EAAA,CAAA,OAAA,OAAA,EAAA,CAAA,OAAA,CAAA,CACA,EACAC,EAAA,CAAA,SAAA,OAAA,SAAA,YAAA,SAAA,aAAA,OAAA,SAAA,SAAA,OAAA,OAAA,EACAC,EAAAC,EAAA;AAAA;AAAA;AAAA,EAIAC,KAAAC,EAAA,OAAA,IAAA,sEAAAA,EAAA,OAAA,yBAAA,GACAC,EAAAC,OAAA,CAAA,CACA,KAAAC,EACA,OAAAC,EACA,YAAAC,EACA,QAAAC,EACA,SAAAC,CACA,IAAA,CACA,MAAAC,EAAAC,EAAA,YAAA,CAAAC,EAAAC,EAAAC,IAAA,CACAP,EAAAK,CAAA,EACAH,EAAAK,CAAA,CAAA,EACA,CAAAL,EAAAF,CAAA,CAAA,EACAQ,EAAAJ,EAAA,YAAA,CAAAN,EAAAQ,EAAAG,IAAA,CACAV,EAAAU,CAAA,EACAR,EAAAK,CAAA,CAAA,EACA,CAAAL,EAAAF,CAAA,CAAA,EACA,CACA,KAAAW,EACA,MAAAC,EACA,SAAAC,EACA,QAAAC,GACAC,EAAA,CACA,KAAAhB,EACA,SAAAK,EACA,SAAAK,CAAA,CACA,EACA,OACAO,EAAAC,EAAA,CAAA,SAAA,CAAAD,EAAA,OAAA,CAAA,GAAAL,EACA,SAAA,CAAAO,EAAAC,EAAA,CAAA,SAAA,GAAA,GAAAP,EAAA,OAAAjB,CAAA,EAAA,SAEA,MAAA,CAAA,EACAuB,EAAAE,GAAA,SAAA,GAAA,GAAAR,EAAA,OAAAjB,CAAA,EAAA,SAEA,UAAA,CAAA,EAEAuB,EAAAC,GAAA,QAAA5B,EAAA,QAAAC,EAAA,GAAAoB,EAAA,YAAA,EAAA,SAEA,mCAAA,IAEAS,EACA,CAAA,SAAA,CAAAH,EAAA,SAAA,CAAA,SAAA,CAAAL,EAAA,SAAA,SAAA,EACAK,EAAA,UAAA,KAAA,SAAA,SAAA,CAAAL,EAAA,QAAAC,EAAA,SAEA,OAAA,CAAA,CAAA,EACA,CAAA,EACA,IACAQ,EAAA,EAAA,IACA7B,EACA,CAAA,SAAA,CAAAyB,EAAA,MAAA,SAAA,iBAAA,CAAA,EACAA,EAAA,OAAA,wBAAA,CACA,OAAAN,EAAA,MAAA,EAAA,KAAA,EACA,CAAA,EACA,CACA,CAAA,CAAA,CACA,CAAA,EACAW,EAAA,IACAL,EAAAM,EAAA,CAAA,QAAA3B,EAAA,YAAA,CACA,KAAA,6OACA,CAAA,CAAA,EAEA4B,EAAA,CACA,MAAA,oBACA,WAAA,CACA,QAAA,CACA,UAAA,EACA,CACA,CACA,YACAF,EAAA,WAAA,CACA,GAAAA,EAAA,WACA,KAAA,CACA,IAAAG,EAAAH,EAAA,aAAA,YAAAG,EAAA,KACA,OAAA,CACA,eAAA;AAAA;AAAA;AAAA;AAAA,GACA,IAAAC,GAAAC,EAAAL,EAAA,aAAA,YAAAK,EAAA,OAAA,YAAAD,EAAA,MACA,CACA,CACA,EAAAJ,EAAA,aAAA,CAAA,YAAA,GAAA,QAAA,GAAA,YAAA"}