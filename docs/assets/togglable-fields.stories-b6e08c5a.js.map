{"version":3,"file":"togglable-fields.stories-b6e08c5a.js","sources":["../../stories/overview/togglable-fields.stories.jsx"],"sourcesContent":["import { useCorn } from '@react-corn/core';\nimport { Switch, Text } from '@react-corn/mui';\nimport { memo, useCallback } from 'react';\nimport { Button, Form } from '../helpers/muiForm';\nimport { Story } from '../helpers/Story';\nexport default {\n  title: 'Overview/togglable-fields',\n  parameters: {\n    options: {\n      showPanel: true\n    }\n  }\n};\nconst CornForm = memo(({\n  item,\n  onItem,\n  onTransient,\n  onDelta,\n  onErrors\n}) => {\n  const handleChange = useCallback((transient, delta, errors) => {\n    onTransient(transient);\n    onErrors(errors);\n  }, [onErrors, onTransient]);\n  const handleSubmit = useCallback((item, delta, cleanedItem) => {\n    // We use cleanedItem here to remove unwanted value\n    onItem(cleanedItem);\n    onDelta(delta);\n  }, [onDelta, onItem]);\n  const {\n    form,\n    field,\n    modified,\n    onReset,\n    current\n  } = useCorn({\n    item,\n    onChange: handleChange,\n    onSubmit: handleSubmit\n  });\n  return <Form {...form}>\n      <Switch {...field('night')} onLabel=\"Night\">\n        Day\n      </Switch>\n      {current(({\n      night\n    }) => night) && <Text required {...field('night-text')}>\n          Night Text\n        </Text>}\n      {current(({\n      night\n    }) => !night) && <Text required {...field('day-text')}>\n          Day Text\n        </Text>}\n      <Button type=\"submit\" disabled={!modified} color=\"primary\" variant=\"contained\">\n        Submit\n      </Button>\n      <Button disabled={!modified} onClick={onReset}>\n        Reset\n      </Button>\n    </Form>;\n});\nexport const CornStory = () => {\n  return <Story Chapter={CornForm} initialItem={{\n    night: true\n  }} />;\n};\nCornStory.parameters = {\n  ...CornStory.parameters,\n  docs: {\n    ...CornStory.parameters?.docs,\n    source: {\n      originalSource: \"() => {\\n  return <Story Chapter={CornForm} initialItem={{\\n    night: true\\n  }} />;\\n}\",\n      ...CornStory.parameters?.docs?.source\n    }\n  }\n};"],"names":["togglableFields_stories","CornForm","memo","item","onItem","onTransient","onDelta","onErrors","handleChange","useCallback","transient","delta","errors","handleSubmit","cleanedItem","form","field","modified","onReset","current","useCorn","jsxs","Form","jsx","Switch","night","Text","Button","CornStory","Story","_a","_c","_b"],"mappings":"0lBAKA,MAAAA,EAAA,CACA,MAAA,4BACA,WAAA,CACA,QAAA,CACA,UAAA,EACA,CACA,CACA,EACAC,EAAAC,OAAA,CAAA,CACA,KAAAC,EACA,OAAAC,EACA,YAAAC,EACA,QAAAC,EACA,SAAAC,CACA,IAAA,CACA,MAAAC,EAAAC,EAAA,YAAA,CAAAC,EAAAC,EAAAC,IAAA,CACAP,EAAAK,CAAA,EACAH,EAAAK,CAAA,CAAA,EACA,CAAAL,EAAAF,CAAA,CAAA,EACAQ,EAAAJ,EAAA,YAAA,CAAAN,EAAAQ,EAAAG,IAAA,CAEAV,EAAAU,CAAA,EACAR,EAAAK,CAAA,CAAA,EACA,CAAAL,EAAAF,CAAA,CAAA,EACA,CACA,KAAAW,EACA,MAAAC,EACA,SAAAC,EACA,QAAAC,EACA,QAAAC,GACAC,EAAA,CACA,KAAAjB,EACA,SAAAK,EACA,SAAAK,CAAA,CACA,EACA,OAAAQ,EAAAC,EAAA,CAAA,GAAAP,EACA,SAAA,CAAAQ,EAAAC,GAAA,GAAAR,EAAA,OAAA,EAAA,QAAA,QAAA,SAEA,MAAA,EACAG,EAAA,CAAA,CACA,MAAAM,CACA,IAAAA,CAAA,GAAAF,EAAAG,EAAA,CAAA,SAAA,GAAA,GAAAV,EAAA,YAAA,EAAA,SAEA,YAAA,CAAA,EACAG,EAAA,CAAA,CACA,MAAAM,CACA,IAAA,CAAAA,CAAA,GAAAF,EAAAG,EAAA,CAAA,SAAA,GAAA,GAAAV,EAAA,UAAA,EAAA,SAEA,UAAA,CAAA,EACAO,EAAAI,EAAA,CAAA,KAAA,SAAA,SAAA,CAAAV,EAAA,MAAA,UAAA,QAAA,YAAA,SAEA,QAAA,CAAA,IACAU,EAAA,CAAA,SAAA,CAAAV,EAAA,QAAAC,EAAA,SAEA,QAAA,CACA,CAAA,CAAA,CACA,CAAA,EACAU,EAAA,IACAL,EAAAM,EAAA,CAAA,QAAA5B,EAAA,YAAA,CACA,MAAA,EACA,CAAA,CAAA,YAEA2B,EAAA,WAAA,CACA,GAAAA,EAAA,WACA,KAAA,CACA,IAAAE,EAAAF,EAAA,aAAA,YAAAE,EAAA,KACA,OAAA,CACA,eAAA;AAAA;AAAA;AAAA;AAAA,GACA,IAAAC,GAAAC,EAAAJ,EAAA,aAAA,YAAAI,EAAA,OAAA,YAAAD,EAAA,MACA,CACA,CACA,EAAAH,EAAA,aAAA,CAAA,YAAA,GAAA,QAAA,GAAA,YAAA"}