{"version":3,"file":"stress-test.stories-ab44ae0d.js","sources":["../../stories/sandbox/stress-test.stories.jsx"],"sourcesContent":["/* eslint-disable jsx-a11y/label-has-associated-control */\nimport { useCorn } from '@react-corn/core';\nimport { ButtonRow, Text } from '@react-corn/simple';\nimport { useState } from 'react';\nconst fields = 1000;\nconst initialItem = Object.fromEntries(new Array(fields).fill().map((_, i) => [`field-${i}`, `value-${i}`]));\nexport const StressTest = () => {\n  const [item, setItem] = useState(initialItem);\n  const {\n    form,\n    field,\n    modified,\n    onReset\n  } = useCorn({\n    item,\n    onSubmit: newItem => {\n      const accepted = window.confirm(`You submitted \"${Object.values(newItem).join(', ')}\"`);\n      accepted && setItem(newItem);\n    }\n  });\n  return <form {...form} style={{\n    display: 'flex',\n    flexWrap: 'wrap'\n  }}>\n      {new Array(fields).fill().map((_, i) => <Text key={i} required {...field(`field-${i}`)}>\n          Field {i}\n        </Text>)}\n      <div style={{\n      width: '100%'\n    }} />\n      <ButtonRow>\n        <button disabled={!modified}>Submit</button>\n        <button type=\"button\" disabled={!modified} onClick={onReset}>\n          Reset\n        </button>\n      </ButtonRow>\n    </form>;\n};\nexport default {\n  title: 'Sandbox/simple-stress-test',\n  parameters: {\n    options: {\n      showPanel: false\n    }\n  }\n};\nStressTest.parameters = {\n  ...StressTest.parameters,\n  docs: {\n    ...StressTest.parameters?.docs,\n    source: {\n      originalSource: \"() => {\\n  const [item, setItem] = useState(initialItem);\\n  const {\\n    form,\\n    field,\\n    modified,\\n    onReset\\n  } = useCorn({\\n    item,\\n    onSubmit: newItem => {\\n      const accepted = window.confirm(`You submitted \\\"${Object.values(newItem).join(', ')}\\\"`);\\n      accepted && setItem(newItem);\\n    }\\n  });\\n  return <form {...form} style={{\\n    display: 'flex',\\n    flexWrap: 'wrap'\\n  }}>\\n      {new Array(fields).fill().map((_, i) => <Text key={i} required {...field(`field-${i}`)}>\\n          Field {i}\\n        </Text>)}\\n      <div style={{\\n      width: '100%'\\n    }} />\\n      <ButtonRow>\\n        <button disabled={!modified}>Submit</button>\\n        <button type=\\\"button\\\" disabled={!modified} onClick={onReset}>\\n          Reset\\n        </button>\\n      </ButtonRow>\\n    </form>;\\n}\",\n      ...StressTest.parameters?.docs?.source\n    }\n  }\n};"],"names":["fields","initialItem","_","i","StressTest","item","setItem","useState","form","field","modified","onReset","useCorn","newItem","jsxs","Text","jsx","ButtonRow","stressTest_stories","_a","_c","_b"],"mappings":"kPAIA,MAAAA,EAAA,IACAC,EAAA,OAAA,YAAA,IAAA,MAAAD,CAAA,EAAA,OAAA,IAAA,CAAAE,EAAAC,IAAA,CAAA,SAAAA,IAAA,SAAAA,GAAA,CAAA,CAAA,EACAC,EAAA,IAAA,CACA,KAAA,CAAAC,EAAAC,CAAA,EAAAC,WAAAN,CAAA,EACA,CACA,KAAAO,EACA,MAAAC,EACA,SAAAC,EACA,QAAAC,GACAC,EAAA,CACA,KAAAP,EACA,SAAAQ,GAAA,CACA,OAAA,QAAA,kBAAA,OAAA,OAAAA,CAAA,EAAA,KAAA,IAAA,IAAA,GACAP,EAAAO,CAAA,CACA,CAAA,CACA,EACA,OAAAC,EAAA,OAAA,CAAA,GAAAN,EAAA,MAAA,CACA,QAAA,OACA,SAAA,MAEA,EAAA,SAAA,CAAA,IAAA,MAAAR,CAAA,EAAA,KAAA,EAAA,IAAA,CAAAE,EAAAC,IAAAW,EAAAC,GAAA,SAAA,GAAA,GAAAN,EAAA,SAAAN,GAAA,EAAA,SAAA,CAAA,SACAA,CAAA,CAAA,EADAA,CAEA,CAAA,EACAa,EAAA,OAAA,MAAA,CACA,MAAA,MAAA,EACA,IACAC,EACA,CAAA,SAAA,CAAAD,EAAA,SAAA,CAAA,SAAA,CAAAN,EAAA,SAAA,SAAA,EACAM,EAAA,UAAA,KAAA,SAAA,SAAA,CAAAN,EAAA,QAAAC,EAAA,SAEA,OAAA,CAAA,CAAA,EACA,CACA,CAAA,CAAA,CACA,EACAO,EAAA,CACA,MAAA,6BACA,WAAA,CACA,QAAA,CACA,UAAA,EACA,CACA,CACA,YACAd,EAAA,WAAA,CACA,GAAAA,EAAA,WACA,KAAA,CACA,IAAAe,EAAAf,EAAA,aAAA,YAAAe,EAAA,KACA,OAAA,CACA,eAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACA,IAAAC,GAAAC,EAAAjB,EAAA,aAAA,YAAAiB,EAAA,OAAA,YAAAD,EAAA,MACA,CACA,CACA,EAAAhB,EAAA,aAAA,CAAA,YAAA,GAAA,QAAA,GAAA,YAAA"}